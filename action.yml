name: 'Vitalik'
description: 'The updater'

inputs:
  pr_branch:
    description: |
      PR branch.
      Default 'package-lock'
    default: 'package-lock'

runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Validate Gradle Wrapper
      uses: gradle/actions/wrapper-validation@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '21'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-cleanup: true

    - name: Update lock
      shell: bash
      run: |
        rm package-lock.json
        ./gradlew :kotlinStorePackageLock

    - id: modified-files
      name: Check modified files
      shell: bash
      run: |
        echo "list=$( git ls-files --modified )" >> "$GITHUB_OUTPUT"

    - name: Commit changes
      if: steps.modified-files.outputs.list == 'package-lock.json'
      shell: bash
      run: |
        git add package-lock.json
        git config --global user.name "Vitalik"
        git config --global user.email "vit@lik"
        git commit -m "Update \`package-lock.json\`"

    - name: Push changes
      if: steps.modified-files.outputs.list == 'package-lock.json'
      shell: bash
      run: |
        git checkout -b ${{ inputs.pr_branch }}
        git push -f https://${{ github.token }}@github.com/${{ github.repository }}.git ${{ inputs.pr_branch }}

    - id: pr-state
      name: Check PR
      shell: bash
      if: steps.modified-files.outputs.list == 'package-lock.json'
      run: |
        echo "state=$( gh pr view ${{ inputs.pr_branch }} --json state --jq .state || echo "ABSENT" )" >> "$GITHUB_OUTPUT"
      env:
        GH_TOKEN: ${{ github.token }}

    - name: Create PR
      if: >
        steps.modified-files.outputs.list == 'package-lock.json'
        && steps.pr-state.outputs.state != 'OPEN'
      shell: bash
      run: |
        gh pr create --fill --base ${{ github.ref_name }} --head ${{ inputs.pr_branch }}
      env:
        GH_TOKEN: ${{ github.token }}

branding:
  icon: 'lock'
  color: 'orange'
